ข้อมูลแต่ละโฟลเดอร์ + ไฟล์หลังบ้าน

***จะมีบางหน้าที่จะรวมไฟล์หลังบ้านมาไว้ในหน้าเดียว เช่น news กับ category
***พวกที่มีกลุ่มคือ ในส่วนหน้าบ้านจะอยู่ในกลุ่ม nav bar เดียวกัน แต่ยังสร้างตาราง/ไฟล์แยกอยู่

admin -> ส่วนแอดมิน CRUD = admin.js //เสร็จ

category -> หมวดหมู่หลัก และ รอง(รวมตารางกัน) CRUD = category.js + sub_category.js //เสร็จ

major -> ระดับความสำคัญ CRUD = major.js //เสร็จ

///กลุ่ม member
member -> ข้อมูลสมาชิก CRUD +  = member.js //เสร็จ
favorite_category -> ข้อมูลสิ่งที่สมาชิกชอบ เฉพาะ select+delete = favorite_category.js
read_later -> ข้อมูลข่าวอ่านภายหลัง เฉพาะ select+delete = read_later.js
read_history -> ข้อมูลประวัติการอ่านข่าว เฉพาะ select = read_history.js //เสร็จ

///กลุ่ม news
news -> CRUD ข้อมูลข่าว + ข้อมูลรูปภาพ = news.js // เหลือเพิ่มหมวดหมู่รองให้ News ด้วย
news_rating -> ข้อมูลคะแนนข่าว เฉพาะ select = news_rating.js //เสร็จ
total_read -> ข้อมูลข่าวที่ถูกอ่านไปแล้ว เฉพาะ select = total_read.js
picture -> รูปภาพของข่าว เฉพาะ select insert delete (เก็บไฟล์รูปเป็น jpg/png เก็บได้มากกว่า 1 รูป) //เสร็จ

///กลุ่ม work status
work_status -> ข้อมูลสถานะการทำงาน CRUD = work_status.js //เสร็จ

///กลุ่มระบบใหญ่
export -> เอาปุ่ม export ไปไว้หน้า dashboard //เสร็จ
login //เสร็จ
recovery+reset_password //เสร็จ

\\\\\\\\\\\\                     งานที่เหลือตอนนี้ (ไม่นับ CRUD)                      //////////////
                        1. ทำให้ทุกหน้า Link หากันได้ ด้วย Navigation Bar / Tab
                        2. ทำให้หน้าแต่ละหมวด Link หากันได้ตามสมควร
                        3. ทำ UI ให้อยู่ในเกณฑ์พอใช้ได้
                        4. ตรวจการ validate แต่ละช่องกรอกข้อมูล
                        5. เช็ค PK,FK ให้ cascade on delete //เสร็จ
                        6. โชว์ตัวเลข/ข้อมูล ในหน้า dashboard ให้สมบูรณ์ ได้แก่ จำนวนข่าวทั้งหมด จำนวนการอ่านทั้งหมด จำนวนสมาชิกทั้งหมด ปุ่ม export data
                        7. ตรวจเรื่องชื่อ/pathสำหรับลิงค์หน้า ให้ถูกต้อง



อัพเดทเรื่อง work_status
จากเดิม จะมี work_status ที่เก็บ status_id กับ adm_status
แล้วจะมี work_status_detail ที่เก็บ adm_id กับ status_id เพื่อบอกว่า admin คนนี้ มี status_id ที่มีค่า adm_status คืออะไร และพวกวันที่เริ่ม/จบงาน
เช่น status_id = 1 จะมี adm_status = 0 (ลาออก) หรือ status_id = 2 จะมี adm_status = 1 (กำลังทำงาน) 
ทีนี้เวลาจะล็อคอิน หรือ เพิ่มแอดมิน จะต้องไปเซ็ทค่า status_id ใน work_status_detail ให้ = 2 ซึ่ง status_id = 2 จะมี adm_status คือ 1 หรือ Working
โดยที่ในระบบ การจะเพิ่มแอดมินหรือการล็อคอิน ควรจะตรวจว่า adm_status = 1 ตรงๆเลย ไม่ควรที่จะตรวจจาก status_id เพราะ id เป็น primary key โดดๆ 
จะมีการ auto increment(รันเลขเรื่อยๆ) หากเพิ่มข้อมูล adm_status ผิดแล้วเผลอลบเลขที่รันตาม logic ที่สร้างไว้ อาจจะทำให้ระบบพัง ต้องแก้ logic อีกหลายส่วนจำนวนมาก
เช่น ถ้าตั้ง logic ให้ status_id = 2 เท่านั้น ถึงจะล้อคอินผ่าน แต่เผลอลบข้อมูลที่มี status_id = 2 ไปแล้ว
ทำให้ต้องไปแก้ logic ทุกอย่าง ให้เปลี่ยนค่า status_id = 2 ถึงจะล้อคอินผ่าน เป็นค่าอื่นแทน
และการเซ็ตให้ตรวจค่าจาก id จะยิ่งทำให้ระบบซับซ้อน เพราะต้องไปหาค่าข้างในของ id มาดูอีกทีว่าทำไมถึงต้องเซ็ตให้ค่าตรงกับไอดีนั้นๆ เท่านั่น
